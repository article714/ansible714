- name: Check if GitLab configuration file already exists.
  stat: path=/etc/gitlab/gitlab.rb
  register: gitlab_config_file

- name: Check if GitLab is already installed.
  stat: path=/usr/bin/gitlab-ctl
  register: gitlab_file

- name: Install GitLab dependencies.
  package:
    name:
      - openssh-server
      - postfix
      - curl
      - openssl
      - tzdata
    state: present

- name: Install GitLab dependencies.
  package:
    name:
      - openssh-server
      - postfix
      - curl
      - openssl
      - tzdata
    state: present

- name: Install GitLab dependencies (Debian).
  apt:
    name: gnupg2
    state: present
  when: ansible_os_family == 'Debian'

- name: Download GitLab repository installation script.
  get_url:
    url: "https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh"
    dest: /tmp/gitlab_install_repository.sh
  when: not gitlab_file.stat.exists

- name: Install GitLab repository.
  command: bash /tmp/gitlab_install_repository.sh
  register: output
  when: not gitlab_file.stat.exists

- name: Install GitLab
  package:
    name: gitlab-ce
    state: present
  when: not gitlab_file.stat.exists

- name: Check protect-links.conf state
  stat:
    path: etc/systctl.d/protect-links.conf
    register: protect_links_file

- name: Disable protect-links.conf container file
  command: mv etc/systctl.d/protect-links.conf etc/systctl.d/protect-links.conf.SAVE
  when: protect_links_file.stat.exists

# Start and configure GitLab. Sometimes the first run fails, but after that,
# restarts fix problems, so ignore failures on this run.
- name: Reconfigure GitLab (first run).
  command: >
    gitlab-ctl reconfigure
    creates=/var/opt/gitlab/bootstrapped
  failed_when: false

# - name: Copy GitLab configuration file.
#   template:
#     src: "{{inventory_dir}}/files/{{inventory_hostname}}/gitlab/gitlab.rb"
#     dest: /etc/gitlab/gitlab.rb
#     owner: root
#     group: root
#     mode: 0600
#   notify: restart gitlab